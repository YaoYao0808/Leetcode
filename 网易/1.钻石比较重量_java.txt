题目：
小明陪小红去看钻石，他们从一堆钻石中随机抽取两颗并比较她们的重量。
这些钻石的重量各不相同。在他们们比较了一段时间后，它们看中了两颗钻石g1和g2。现在请你根据之前比较的信息判断这两颗钻石的哪颗更重。

给定两颗钻石的编号g1,g2，编号从1开始，同时给定关系数组vector,其中元素为一些二元组，第一个元素为一次比较中较重的钻石的编号，第二个元素为较轻的钻石的编号。
最后给定之前的比较次数n。请返回这两颗钻石的关系，若g1更重返回1，g2更重返回-1，无法判断返回0。输入数据保证合法，不会有矛盾情况出现。

测试样例：
2，3，[[1，2]，[2，4]，[1，3]，[4，3]]，4

题目理解：
二维数组中已知的信息为：
1>2
2>4
1>3
4>3

所以1>2>4>3

题目给出的2和3，则可以从1>2>4>3中判断出2>3,则返回1

代码思路：(java版本)
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Ideone
{
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here  测试数据
		// 2，3，[[1，2]，[2，4]，[1，3]，[4，3]]，4
		int[][] records={{1,2},{2,4},{1,3},{4,3}};
		int g1=2;
		int g2=3;
		
		int ret = cmp(g1,g2,records,4);
		System.out.println(ret);
	}
	// cmp方法
	public static int cmp(int g1, int g2, int[][] records, int n) {  
        // write code here  
        int[][] temp = new int[100][100];  
        int count=0;// 此变量为计数比较次数
        while(count<n){
        	count++;
			for(int i=0; i<n; i++) {    
				int a = records[i][0]-1;  
				int b = records[i][1]-1;  
				temp[a][b] = 1;  
				temp[b][a] = -1;  
			  
				for(int j=0; j<100; j++) {  
					if(temp[j][a] == 1) {  // 如果j号钻石比a大，a又比b大
						temp[j][b] = 1;  
						temp[b][j] = -1;  
					}  
					if(temp[b][j] == 1) {  // 如果b比j号钻石大，则a也比j号钻石大
						temp[a][j] = 1;  
						temp[j][a] = -1;  
					}  
				}
			}
        }  
        return temp[g1-1][g2-1];  
    }
}


