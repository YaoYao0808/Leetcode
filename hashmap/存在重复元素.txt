题目：
给定一个整数数组，判断是否存在重复元素。

如果任何值在数组中出现至少两次，函数返回 true。如果数组中每个元素都不相同，则返回 false。

示例 1:

输入: [1,2,3,1]
输出: true
示例 2:

输入: [1,2,3,4]
输出: false
示例 3:

输入: [1,1,1,3,3,4,3,2,4,2]
输出: true

之前的解法一：
直接使用两个for循环，暴力算法依次比较两个的值是否相等，只要存在相等的，则表示存在重复
bool containsDuplicate(int* nums, int numsSize) {
    int i, j;
    
    for(i = 0; i < numsSize - 1; i++){
        for(j = i + 1; j < numsSize; j++)
        {
            if(nums[i] == nums[j])
                return true;
        }
    }
    return false;
}

学了哈希表的使用后，更新的解法如下：
1.哈希集：存储非重复元素
2.哈希映射：key和value对应，key是唯一的，value可以重复

#include <unordered_set>      

class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        unordered_set<int> hashset;
        for (int key : nums) {
        if (hashset.count(key) > 0) {
            return true;
        }
        hashset.insert(key);
    }
    return false;
    }
};
